
* Initialization
** Initialization begins in a GUI/interface classes.
   
   1. Interface class creates instance of a Lowlevel class (e.g. Serial)
   2. Creates instance of Protocol::Callback and finally
   3. Creates Protocol instance passing it the callback and lowlevel.

** Protocol part
   Protocol (e.g. modbus) creates instance of it's LowLevel::Callback
   and registers it in the lowlevel object it got from the interface.


* Dataflow

|-----------------------|
| Interface layer       |
| Directory: Interface/ |-----\
|                       |      \   "up" (Receiving)
|-----------------------|      	\
           |  	       		 \
           |  	       		  \
           |  "Down"   	       	   |-----------------------------|
           |  (Sending)		   | Protocol layer callback     | (A)
           |   	       	       	   | Implemented by higher layer |
           |  	       	   	   |-----------------------------|
           |  	   	       	  /
|----------------------------------|
| Protocol layer                   |
|----------------------------------|
           |   	       	       	 \      "up"
           |  	   		  \
	   |  	   		|-----------------------------------|
	   |  	   		| Lowlevel callback implementation  |
	   | "Down"		| Done in protocol layer and passed | (B)
	   |   	       	       	| down to lowlevel                  |
	   |  			|-----------------------------------|
	   |  			    |
	   |  			    |
	   |  			    |
|---------------------------------------------|
| Lowlevel layer                              |
| Interrupts etc are defined  here.           |
| Each time we get some data we call function |
| from the callback class supplied during     |
| initialization.                             |
|---------------------------------------------|
	    /\
	    ||
	    \/
|---------------------------------|
| System API for accessing Serial |
|---------------------------------|















